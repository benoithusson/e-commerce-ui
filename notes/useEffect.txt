1. useEffect

- Definition
    Pour lancer du code après que le composant ait été rendu à l'écran.
    Effectuer des opérations côté client :récupérer des données via une API, mettre à jour des variables, interagir avec des éléments du DOM...

- Quand l'utiliser ?
    Pour exécuter une action après le rendu initial (lorsque le composant est monté).
    Pour effectuer un nettoyage avant que le composant soit démonté (par exemple, annuler un abonnement à un événement).

- Pourquoi faire un nettoyage ?
    Permet aussi d'éviter des actions en arriére plan inutile et donc d'économiser des ressources
    Exemple : Si vous créez des abonnements à des événements, vous devez les annuler lorsque le composant est démonté pour éviter que ces abonnements 
    continuent à exister après que le composant ait été retiré de l'interface.

___________________________________________________________________

- Que signifie le tableau vide [] ? 
    Signifie que l'effet s'exécutera uniquement lors du montage du composant (au début de la vie du composant), 
    et ne sera pas réexécuté lors des re-rendus (changements d'état ou de props).

useEffect(() => {
    fetch('/data.json')
      .then((response) => {
        if(!response.ok) {
          throw new Error ('ERROR');
        }
        return response.json()
      })
      .then((data) => {
        setData(data.hero_section[0]);
        setLoading(false);
      })
      .catch((error) => {
        setError(error.message);
        setLoading(false);
        console.error('Error loading JSON data:', error);
      });
      // 
    }, []);